name: Flask CI/CD

on:
  push:
    branches: ["main"]

jobs:
  # -------------------
  # 1. Build Stage
  # -------------------
  build:
    name: Build Stage
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: pip install -r requirements.txt

  # -------------------
  # 2. Test Stage
  # -------------------
  test:
    name: Test Stage
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          pip install -r requirements.txt
          pip install pytest   # Ensure pytest is available

      - name: Run pytest
        run: pytest

  # -------------------
  # 3. Docker Build & Push
  # -------------------
  docker:
    name: Docker Stage
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: abdraheem98/my-flask-app:latest

  # -------------------
  # 4. Deploy Stage
  # -------------------
  deploy:
    name: Deploy to EC2
    runs-on: ubuntu-latest
    needs: docker   # Wait until Docker push finishes
    steps:
      - name: Deploy over SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            docker pull abdraheem98/my-flask-app:latest
            docker stop flask-app || true
            docker rm flask-app || true
            docker run -d -p 80:5000 --name flask-app abdraheem98/my-flask-app:latest
